[versions]
# Build Tools
agp = "8.4.0"
kotlin = "1.9.23"
composeCompiler = "1.5.13" # Ensure this matches Kotlin 1.9.23 via compatibility map

# ... (other versions remain the same)
coreKtx = "1.13.1"
lifecycleRuntimeKtx = "2.8.7"
activityCompose = "1.10.1"
composeBom = "2025.03.00" # Consider using a more recent stable BOM if available, e.g., 2024.05.00
material3 = "1.3.1"        # Will be managed by BOM if used correctly
junit = "4.13.2"
androidxJunit = "1.2.1"
espressoCore = "3.6.0"
cameraX = "1.4.0"
room = "2.6.1"
lifecycle = "2.8.0"
mlkitTextRecognition = "16.0.1" # Added from your libraries section

[libraries]

androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-savedstate = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }
# Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" } # Version from BOM
mlkit-text-recognition = { group = "com.google.mlkit", name = "text-recognition", version.ref = "mlkitTextRecognition" } # Use version ref

androidx-multidex = { group = "androidx.multidex", name = "multidex", version = "2.0.1" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "androidxJunit" }
# You have duplicate espresso definitions, keep one consistent one
# androidx-test-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
# You have duplicate compose test definitions, keep one consistent set
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" } # Version from BOM
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" } # Version from BOM

# Build logic - Define gradle plugins here IF needed for buildSrc or convention plugins, otherwise often not needed here
# android-gradle = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
# kotlin-gradle = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }

# Compose
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose" } # Let BOM manage version
androidx-ui = { group = "androidx.compose.ui", name = "ui" } # Version from BOM
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" } # Version from BOM
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" } # Version from BOM
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" } # Version from BOM
# androidx-ui-test-manifest is already under Testing
# androidx-ui-test-junit4 is already under Testing
androidx-material3 = { group = "androidx.compose.material3", name = "material3"} # Let BOM manage version

# CameraX
androidx-camera-camera2 = { group = "androidx.camera", name = "camera-camera2", version.ref = "cameraX"}
androidx-camera-lifecycle = { group = "androidx.camera", name = "camera-lifecycle", version.ref = "cameraX"}
androidx-camera-view = { group = "androidx.camera", name = "camera-view", version.ref = "cameraX"}

# Room
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }

[plugins]
# Define plugin aliases here to use in build files
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
# The compose compiler plugin ID IS tied to kotlin, but the version applied comes
# from composeCompilerExtensionVersion in composeOptions or inferred.
# No separate plugin definition usually needed here unless applying specific version manually.
# kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "composeCompiler" } # Correct version if needed, but often unnecessary